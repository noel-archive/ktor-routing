# ðŸ“­ ktor-routing: Extensions to Ktor?s routing system to add object-oriented routing and much more.
# Copyright (c) 2022-2023 Noelware, LLC. <team@noelware.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Linting and Unit Testing
on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/**'
      - 'issue/gh-**'
      - master

    paths-ignore:
      - '.github/**'
      - '.husky/**'
      - '.vscode/**'
      - 'assets/**'
      - 'locales/**'
      - 'docker/**'
      - 'docs/**'
      - '.dockerignore'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'renovate.json'

  pull_request:
    types: [opened, synchronize]
    branches:
      - 'feature/**'
      - 'issue/gh-**'
      - master

    paths-ignore:
      - '.husky/**'
      - '.vscode/**'
      - 'assets/**'
      - 'locales/**'
      - 'docker/**'
      - '.dockerignore'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'renovate.json'
jobs:
  ktlint:
    name: Linting and Unit Testing (Java ${{matrix.java-version}})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [17, 19]
    steps:
      - name: Checks out the repository
        uses: actions/checkout@v3

      - name: Sets up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Lets ./gradlew be executable
        run: chmod +x ./gradlew

      - name: Lints the repository for any code errors
        run: ./gradlew spotlessCheck --no-daemon

      - name: Builds the project for any errors
        run: ./gradlew compileKotlin --no-daemon

      - name: Unit test the project
        run: ./gradlew test --no-daemon
