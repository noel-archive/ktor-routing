[{"name":"abstract fun load(): List<AbstractEndpoint>","description":"org.noelware.ktor.loader.IEndpointLoader.load","location":"core/org.noelware.ktor.loader/-i-endpoint-loader/load.html","searchKeys":["load","abstract fun load(): List<AbstractEndpoint>","org.noelware.ktor.loader.IEndpointLoader.load"]},{"name":"annotation class Delete(val path: String = \"/\")","description":"org.noelware.ktor.endpoints.Delete","location":"core/org.noelware.ktor.endpoints/-delete/index.html","searchKeys":["Delete","annotation class Delete(val path: String = \"/\")","org.noelware.ktor.endpoints.Delete"]},{"name":"annotation class ExperimentalApi","description":"org.noelware.ktor.annotations.ExperimentalApi","location":"core/org.noelware.ktor.annotations/-experimental-api/index.html","searchKeys":["ExperimentalApi","annotation class ExperimentalApi","org.noelware.ktor.annotations.ExperimentalApi"]},{"name":"annotation class Get(val path: String = \"/\")","description":"org.noelware.ktor.endpoints.Get","location":"core/org.noelware.ktor.endpoints/-get/index.html","searchKeys":["Get","annotation class Get(val path: String = \"/\")","org.noelware.ktor.endpoints.Get"]},{"name":"annotation class Http(val path: String = \"/\", val methods: Array<String> = [])","description":"org.noelware.ktor.endpoints.Http","location":"core/org.noelware.ktor.endpoints/-http/index.html","searchKeys":["Http","annotation class Http(val path: String = \"/\", val methods: Array<String> = [])","org.noelware.ktor.endpoints.Http"]},{"name":"annotation class Patch(val path: String = \"/\")","description":"org.noelware.ktor.endpoints.Patch","location":"core/org.noelware.ktor.endpoints/-patch/index.html","searchKeys":["Patch","annotation class Patch(val path: String = \"/\")","org.noelware.ktor.endpoints.Patch"]},{"name":"annotation class Post(val path: String = \"/\")","description":"org.noelware.ktor.endpoints.Post","location":"core/org.noelware.ktor.endpoints/-post/index.html","searchKeys":["Post","annotation class Post(val path: String = \"/\")","org.noelware.ktor.endpoints.Post"]},{"name":"annotation class Put(val path: String = \"/\")","description":"org.noelware.ktor.endpoints.Put","location":"core/org.noelware.ktor.endpoints/-put/index.html","searchKeys":["Put","annotation class Put(val path: String = \"/\")","org.noelware.ktor.endpoints.Put"]},{"name":"annotation class WebSocket(val path: String = \"/\")","description":"org.noelware.ktor.endpoints.WebSocket","location":"core/org.noelware.ktor.endpoints/-web-socket/index.html","searchKeys":["WebSocket","annotation class WebSocket(val path: String = \"/\")","org.noelware.ktor.endpoints.WebSocket"]},{"name":"class ListBasedLoader(endpoints: List<AbstractEndpoint>) : IEndpointLoader","description":"org.noelware.ktor.loader.ListBasedLoader","location":"core/org.noelware.ktor.loader/-list-based-loader/index.html","searchKeys":["ListBasedLoader","class ListBasedLoader(endpoints: List<AbstractEndpoint>) : IEndpointLoader","org.noelware.ktor.loader.ListBasedLoader"]},{"name":"class NoelKtorRoutingConfiguration","description":"org.noelware.ktor.NoelKtorRoutingConfiguration","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/index.html","searchKeys":["NoelKtorRoutingConfiguration","class NoelKtorRoutingConfiguration","org.noelware.ktor.NoelKtorRoutingConfiguration"]},{"name":"class WebSocketRoute(val path: String, runner: KCallable<*>, parent: AbstractEndpoint)","description":"org.noelware.ktor.internal.WebSocketRoute","location":"core/org.noelware.ktor.internal/-web-socket-route/index.html","searchKeys":["WebSocketRoute","class WebSocketRoute(val path: String, runner: KCallable<*>, parent: AbstractEndpoint)","org.noelware.ktor.internal.WebSocketRoute"]},{"name":"fun <C : Any, B : Any> install(endpoints: Map<HttpMethod, String>, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","description":"org.noelware.ktor.endpoints.AbstractEndpoint.install","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/install.html","searchKeys":["install","fun <C : Any, B : Any> install(endpoints: Map<HttpMethod, String>, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","org.noelware.ktor.endpoints.AbstractEndpoint.install"]},{"name":"fun <C : Any, B : Any> install(method: HttpMethod, route: String, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","description":"org.noelware.ktor.endpoints.AbstractEndpoint.install","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/install.html","searchKeys":["install","fun <C : Any, B : Any> install(method: HttpMethod, route: String, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","org.noelware.ktor.endpoints.AbstractEndpoint.install"]},{"name":"fun <C : Any, B : Any> install(plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","description":"org.noelware.ktor.endpoints.AbstractEndpoint.install","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/install.html","searchKeys":["install","fun <C : Any, B : Any> install(plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","org.noelware.ktor.endpoints.AbstractEndpoint.install"]},{"name":"fun <C : Any, B : Any> install(route: String, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","description":"org.noelware.ktor.endpoints.AbstractEndpoint.install","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/install.html","searchKeys":["install","fun <C : Any, B : Any> install(route: String, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","org.noelware.ktor.endpoints.AbstractEndpoint.install"]},{"name":"fun <C : Any, B : Any> install(routes: List<String>, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","description":"org.noelware.ktor.endpoints.AbstractEndpoint.install","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/install.html","searchKeys":["install","fun <C : Any, B : Any> install(routes: List<String>, plugin: Plugin<Route, C, B>, configure: C.() -> Unit = {}): AbstractEndpoint","org.noelware.ktor.endpoints.AbstractEndpoint.install"]},{"name":"fun AbstractEndpoint(path: String)","description":"org.noelware.ktor.endpoints.AbstractEndpoint.AbstractEndpoint","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/-abstract-endpoint.html","searchKeys":["AbstractEndpoint","fun AbstractEndpoint(path: String)","org.noelware.ktor.endpoints.AbstractEndpoint.AbstractEndpoint"]},{"name":"fun AbstractEndpoint(paths: List<String> = listOf(\"/\"))","description":"org.noelware.ktor.endpoints.AbstractEndpoint.AbstractEndpoint","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/-abstract-endpoint.html","searchKeys":["AbstractEndpoint","fun AbstractEndpoint(paths: List<String> = listOf(\"/\"))","org.noelware.ktor.endpoints.AbstractEndpoint.AbstractEndpoint"]},{"name":"fun ListBasedLoader(endpoints: List<AbstractEndpoint>)","description":"org.noelware.ktor.loader.ListBasedLoader.ListBasedLoader","location":"core/org.noelware.ktor.loader/-list-based-loader/-list-based-loader.html","searchKeys":["ListBasedLoader","fun ListBasedLoader(endpoints: List<AbstractEndpoint>)","org.noelware.ktor.loader.ListBasedLoader.ListBasedLoader"]},{"name":"fun NoelKtorRoutingConfiguration()","description":"org.noelware.ktor.NoelKtorRoutingConfiguration.NoelKtorRoutingConfiguration","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/-noel-ktor-routing-configuration.html","searchKeys":["NoelKtorRoutingConfiguration","fun NoelKtorRoutingConfiguration()","org.noelware.ktor.NoelKtorRoutingConfiguration.NoelKtorRoutingConfiguration"]},{"name":"fun WebSocketRoute(path: String, runner: KCallable<*>, parent: AbstractEndpoint)","description":"org.noelware.ktor.internal.WebSocketRoute.WebSocketRoute","location":"core/org.noelware.ktor.internal/-web-socket-route/-web-socket-route.html","searchKeys":["WebSocketRoute","fun WebSocketRoute(path: String, runner: KCallable<*>, parent: AbstractEndpoint)","org.noelware.ktor.internal.WebSocketRoute.WebSocketRoute"]},{"name":"fun dataResponse(callee: DataResponseCallee<Result<Any>, Exception?>): NoelKtorRoutingConfiguration","description":"org.noelware.ktor.NoelKtorRoutingConfiguration.dataResponse","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/data-response.html","searchKeys":["dataResponse","fun dataResponse(callee: DataResponseCallee<Result<Any>, Exception?>): NoelKtorRoutingConfiguration","org.noelware.ktor.NoelKtorRoutingConfiguration.dataResponse"]},{"name":"fun endpointLoader(loader: IEndpointLoader): NoelKtorRoutingConfiguration","description":"org.noelware.ktor.NoelKtorRoutingConfiguration.endpointLoader","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/endpoint-loader.html","searchKeys":["endpointLoader","fun endpointLoader(loader: IEndpointLoader): NoelKtorRoutingConfiguration","org.noelware.ktor.NoelKtorRoutingConfiguration.endpointLoader"]},{"name":"fun endpoints(vararg _endpoints: AbstractEndpoint): NoelKtorRoutingConfiguration","description":"org.noelware.ktor.NoelKtorRoutingConfiguration.endpoints","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/endpoints.html","searchKeys":["endpoints","fun endpoints(vararg _endpoints: AbstractEndpoint): NoelKtorRoutingConfiguration","org.noelware.ktor.NoelKtorRoutingConfiguration.endpoints"]},{"name":"inline fun <T : Any> ApplicationCall.body(): ReadOnlyProperty<Any?, T>","description":"org.noelware.ktor.body","location":"core/org.noelware.ktor/body.html","searchKeys":["body","inline fun <T : Any> ApplicationCall.body(): ReadOnlyProperty<Any?, T>","org.noelware.ktor.body"]},{"name":"interface IEndpointLoader","description":"org.noelware.ktor.loader.IEndpointLoader","location":"core/org.noelware.ktor.loader/-i-endpoint-loader/index.html","searchKeys":["IEndpointLoader","interface IEndpointLoader","org.noelware.ktor.loader.IEndpointLoader"]},{"name":"open class AbstractEndpoint(val paths: List<String> = listOf(\"/\"))","description":"org.noelware.ktor.endpoints.AbstractEndpoint","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/index.html","searchKeys":["AbstractEndpoint","open class AbstractEndpoint(val paths: List<String> = listOf(\"/\"))","org.noelware.ktor.endpoints.AbstractEndpoint"]},{"name":"open override fun load(): List<AbstractEndpoint>","description":"org.noelware.ktor.loader.ListBasedLoader.load","location":"core/org.noelware.ktor.loader/-list-based-loader/load.html","searchKeys":["load","open override fun load(): List<AbstractEndpoint>","org.noelware.ktor.loader.ListBasedLoader.load"]},{"name":"suspend fun run(call: ApplicationCall): Any?","description":"org.noelware.ktor.internal.WebSocketRoute.run","location":"core/org.noelware.ktor.internal/-web-socket-route/run.html","searchKeys":["run","suspend fun run(call: ApplicationCall): Any?","org.noelware.ktor.internal.WebSocketRoute.run"]},{"name":"val ApplicationCall.realIP: String","description":"org.noelware.ktor.realIP","location":"core/org.noelware.ktor/real-i-p.html","searchKeys":["realIP","val ApplicationCall.realIP: String","org.noelware.ktor.realIP"]},{"name":"val NoelKtorRouting: ApplicationPlugin<NoelKtorRoutingConfiguration>","description":"org.noelware.ktor.NoelKtorRouting","location":"core/org.noelware.ktor/-noel-ktor-routing.html","searchKeys":["NoelKtorRouting","val NoelKtorRouting: ApplicationPlugin<NoelKtorRoutingConfiguration>","org.noelware.ktor.NoelKtorRouting"]},{"name":"val attributes: Attributes","description":"org.noelware.ktor.internal.WebSocketRoute.attributes","location":"core/org.noelware.ktor.internal/-web-socket-route/attributes.html","searchKeys":["attributes","val attributes: Attributes","org.noelware.ktor.internal.WebSocketRoute.attributes"]},{"name":"val methods: Array<String>","description":"org.noelware.ktor.endpoints.Http.methods","location":"core/org.noelware.ktor.endpoints/-http/methods.html","searchKeys":["methods","val methods: Array<String>","org.noelware.ktor.endpoints.Http.methods"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.Delete.path","location":"core/org.noelware.ktor.endpoints/-delete/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.Delete.path"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.Get.path","location":"core/org.noelware.ktor.endpoints/-get/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.Get.path"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.Http.path","location":"core/org.noelware.ktor.endpoints/-http/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.Http.path"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.Patch.path","location":"core/org.noelware.ktor.endpoints/-patch/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.Patch.path"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.Post.path","location":"core/org.noelware.ktor.endpoints/-post/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.Post.path"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.Put.path","location":"core/org.noelware.ktor.endpoints/-put/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.Put.path"]},{"name":"val path: String","description":"org.noelware.ktor.endpoints.WebSocket.path","location":"core/org.noelware.ktor.endpoints/-web-socket/path.html","searchKeys":["path","val path: String","org.noelware.ktor.endpoints.WebSocket.path"]},{"name":"val path: String","description":"org.noelware.ktor.internal.WebSocketRoute.path","location":"core/org.noelware.ktor.internal/-web-socket-route/path.html","searchKeys":["path","val path: String","org.noelware.ktor.internal.WebSocketRoute.path"]},{"name":"val paths: List<String>","description":"org.noelware.ktor.endpoints.AbstractEndpoint.paths","location":"core/org.noelware.ktor.endpoints/-abstract-endpoint/paths.html","searchKeys":["paths","val paths: List<String>","org.noelware.ktor.endpoints.AbstractEndpoint.paths"]},{"name":"var basePrefix: String","description":"org.noelware.ktor.NoelKtorRoutingConfiguration.basePrefix","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/base-prefix.html","searchKeys":["basePrefix","var basePrefix: String","org.noelware.ktor.NoelKtorRoutingConfiguration.basePrefix"]},{"name":"var supportKotlinResult: Boolean = false","description":"org.noelware.ktor.NoelKtorRoutingConfiguration.supportKotlinResult","location":"core/org.noelware.ktor/-noel-ktor-routing-configuration/support-kotlin-result.html","searchKeys":["supportKotlinResult","var supportKotlinResult: Boolean = false","org.noelware.ktor.NoelKtorRoutingConfiguration.supportKotlinResult"]},{"name":"object KoinEndpointLoader : IEndpointLoader","description":"org.noelware.ktor.loader.koin.KoinEndpointLoader","location":"loader-koin/org.noelware.ktor.loader.koin/-koin-endpoint-loader/index.html","searchKeys":["KoinEndpointLoader","object KoinEndpointLoader : IEndpointLoader","org.noelware.ktor.loader.koin.KoinEndpointLoader"]},{"name":"open override fun load(): List<AbstractEndpoint>","description":"org.noelware.ktor.loader.koin.KoinEndpointLoader.load","location":"loader-koin/org.noelware.ktor.loader.koin/-koin-endpoint-loader/load.html","searchKeys":["load","open override fun load(): List<AbstractEndpoint>","org.noelware.ktor.loader.koin.KoinEndpointLoader.load"]},{"name":"class ReflectionsEndpointLoader(builder: ConfigurationBuilder.() -> Unit = {}) : IEndpointLoader","description":"org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader","location":"loader-reflection/org.noelware.ktor.loader.reflections/-reflections-endpoint-loader/index.html","searchKeys":["ReflectionsEndpointLoader","class ReflectionsEndpointLoader(builder: ConfigurationBuilder.() -> Unit = {}) : IEndpointLoader","org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader"]},{"name":"fun ReflectionsEndpointLoader(builder: ConfigurationBuilder.() -> Unit = {})","description":"org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader.ReflectionsEndpointLoader","location":"loader-reflection/org.noelware.ktor.loader.reflections/-reflections-endpoint-loader/-reflections-endpoint-loader.html","searchKeys":["ReflectionsEndpointLoader","fun ReflectionsEndpointLoader(builder: ConfigurationBuilder.() -> Unit = {})","org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader.ReflectionsEndpointLoader"]},{"name":"fun ReflectionsEndpointLoader(packageName: String)","description":"org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader.ReflectionsEndpointLoader","location":"loader-reflection/org.noelware.ktor.loader.reflections/-reflections-endpoint-loader/-reflections-endpoint-loader.html","searchKeys":["ReflectionsEndpointLoader","fun ReflectionsEndpointLoader(packageName: String)","org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader.ReflectionsEndpointLoader"]},{"name":"open override fun load(): List<AbstractEndpoint>","description":"org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader.load","location":"loader-reflection/org.noelware.ktor.loader.reflections/-reflections-endpoint-loader/load.html","searchKeys":["load","open override fun load(): List<AbstractEndpoint>","org.noelware.ktor.loader.reflections.ReflectionsEndpointLoader.load"]}]